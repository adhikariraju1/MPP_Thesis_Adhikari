'LineCode' = '400',
'Year' = 'ALL' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaConstruction <- beaGet(beaConstruction)
beaManufacturing <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA25N' ,
'LineCode' = '500',
'Year' = 'ALL' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaManufacturing <- beaGet(beaManufacturing)
beaTransportWarehouse <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA25N' ,
'LineCode' = '800',
'Year' = 'ALL' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaTransportWarehouse <- beaGet(beaTransportWarehouse)
beaAccom_Food <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA25N' ,
'LineCode' = '1800',
'Year' = 'ALL' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaAccom_Food <- beaGet(beaAccom_Food)
#BEA Regional Income Data: Current Transfer receipts of individuals from Governments
beaCurrent_Transfer <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA35' ,
'LineCode' = '2000',
'Year' = 'ALL' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaCurrent_Transfer <- beaGet(beaCurrent_Transfer)
#BEA Regional Income Data: Adjustment for Residence equals the inflows to that county minus the outflows from that county
beaAdjustment_Residence <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA91' ,
'LineCode' = '30',
'Year' = 'ALL' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaAdjustment_Residence <- beaGet(beaAdjustment_Residence)
censusKey <- 'c7ed765d1b03f4217ccc4b37d31b0dc3580db44e'
api.key.install(censusKey)
geo <- geo.make(state = '*', county = '*', combine = F, combine.term = "aggregate", check = FALSE, key = "auto")
male <- acs.fetch(endyear =2015, span =5, geo, dataset = 'acs', variable = 'B01001_002', col.names = 'auto')
censusKey <- 'c7ed765d1b03f4217ccc4b37d31b0dc3580db44e'
api.key.install(censusKey)
geo <- geo.make(state = '*', county = '*', combine = F, combine.term = "aggregate", check = FALSE, key = "auto")
male <- acs.fetch(endyear =2015, span =5, geo, dataset = 'acs', variable = 'B01001_002', col.names = 'auto')
View(beaPCI)
View(beaPCI)
View(voteshare)
View(education)
estimate(male)
estimate(male) -> male.estimate
View(male.estimate)
cbind(male.estimate, standard.error(male)) -> male1
View(male1)
View(male1)
rownames(male1)
library(magrittr)
rownames(male1) %>% cbind(male1)
rownames(male1) %>% cbind(male1) -> male1
View(male1)
View(male1)
knitr::opts_chunk$set(echo = TRUE)
stargazer::stargazer(m4, type='latex', digits = 2, header = FALSE,
title = 'Effect of Income Inequality on EPI(Pooled OLS)', font.size = 'normalsize')
View(unemployment_mhi)
install.packages('httr')
install.packages("httr")
library(httr)
knitr::opts_chunk$set(echo = TRUE)
censusKey <- 'c7ed765d1b03f4217ccc4b37d31b0dc3580db44e'
geo <- geo.make(state = '*', county = '*', combine = F, combine.term = "aggregate", check = FALSE, key = "auto")
install.packages('acs')
library(acs)
geo <- geo.make(state = '*', county = '*', combine = F, combine.term = "aggregate", check = FALSE, key = "auto")
male <- acs.fetch(endyear =2015, span =5, geo, dataset = 'acs', variable = 'B01001_002', col.names = 'auto')
censusKey <- 'c7ed765d1b03f4217ccc4b37d31b0dc3580db44e'
geo <- geo.make(state = '*', county = '*', combine = F, combine.term = "aggregate", check = FALSE, key = "auto")
male <- acs.fetch(endyear =2015, span =5, geo, dataset = 'acs', variable = 'B01001_002', col.names = 'auto')
api.key.install(censusKey)
geo <- geo.make(state = '*', county = '*', combine = F, combine.term = "aggregate", check = FALSE, key = "auto")
male <- acs.fetch(endyear =2015, span =5, geo, dataset = 'acs', variable = 'B01001_002', col.names = 'auto')
estimate(male)
estimate(male) -> male.estimate
View(male.estimate)
qwi <- acs.fetch(endyear =2015, geo, dataset = 'qwi', variable = '_county_naicssec2', col.names = 'auto')
setwd("C:/RajuPC/Content Analysis/Assignment1")
mp.data <- import('mpData.dta')
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(magrittr)
library(ggplot2)
library(rio)
library(tidyr)
library(viridis)
library(stargazer)
library(broom)
rm(list=ls())
setwd("C:/RajuPC/Content Analysis/Assignment1")
mp.data <- import('mpData.dta')
View(mp.data)
gles.data <- import('ZA5302_en_v6-0-0.dta')
View(gles.data)
names(gles.data) #To see all the variables of the dataset gles.data
gles.data <- select(gles.data, wkrnr, vndkirchg) #To select only the variables that are necessary
View(gles.data)
gles.data <- group_by(gles.data, wkrnr)
View(gles.data)
gles.data <- summarise(gles.data, mean_att = mean(vndkirchg))
View(gles.data)
merged.data <- merge(mp.data, gles.data, all.x = T)
View(merged.data)
transform(merged.data, mean_att = round(mean_att, digits = 2)) #This didn"t work check why?
summary(merged.data)
summary(merged.data$mean_att)
gles.data <- import('ZA5302_en_v6-0-0.dta')
summary(gles.data$vndkirchg)
vndkirchg
gles.data$vndkirchg
gles.data <- import('ZA5302_en_v6-0-0.dta')
gles.data <- select(gles.data, wkrnr, vndkirchg > 8) #To select only the variables that are necessary
mp.data$wrknr
mp.data <- import('mpData.dta')
mp.data$wrknr
gles.data$wkrnr
mp.data$vote
View(mp.data)
View(vote)
View(mp.data$vote)
summary(mp.data$vote)
class(mp.data$vote)
labels(mp.data$vote)
gles.data <- import('ZA5302_en_v6-0-0.dta')
names(gles.data) #To see all the variables of the dataset gles.data
gles.data <- select(gles.data, wkrnr, vndkirchg) #To select only the variables that are necessary
gles.data <- filter(vndkirchg < 8)
gles.data <- filter(gles.data, vndkirchg < 8)
gles.data <- group_by(gles.data, wkrnr)
gles.data <- summarise(gles.data, mean_att = mean(vndkirchg))
merged.data <- merge(mp.data, gles.data, all.x = T)
summary(merged.data$mean_att) #Do I need to do anything with NA's?
merged.logit.data <- filter(merged.data, vote <= 1)
View(merged.logit.data)
View(merged.data)
m3 <- glm(Position ~ mean_att + Catholic + Prostestant + NoAffiliation + Female + Parent + Female*Parent +
Theology + Medicine + Greens + CDU + CSU + Left + FDP, merged.logit.data,
family = binomial(link = 'logit'))
m3 <- glm(vote ~ mean_att + Catholic + Prostestant + NoAffiliation + Female + Parent + Female*Parent +
Theology + Medicine + Greens + CDU + CSU + Left + FDP, merged.logit.data,
family = binomial(link = 'logit'))
summary(m3)
m4 <- glm(vote ~ mean_att + Catholic + Prostestant + NoAffiliation + Female + Parent + Female*Parent +
Theology + Medicine + Greens + CDU + CSU + Left + FDP, merged.logit.data,
family = binomial(link = 'logit'))
```{r regression, results='asis', echo = FALSE, message=FALSE}
stargazer(m3, m4, type='html', header = FALSE,
title = 'Determinants of MPs Positions in the Debate on Regulating PGD')
stargazer(m1, m2, type='html', header = FALSE,
title = 'Determinants of MPs Positions in the Debate on Regulating PGD')
stargazer(m1, m2, type='html', header = FALSE,
title = 'Determinants of MPs Positions in the Debate on Regulating PGD')
m1 <- lm(Position ~ mean_att + Catholic + Prostestant + NoAffiliation + Female + Parent + Female*Parent +
Theology + Medicine, merged.data)
m2 <- lm(Position ~ mean_att + Catholic + Prostestant + NoAffiliation + Female + Parent + Female*Parent +
Theology + Medicine + Greens + CDU + CSU + Left + FDP, merged.data)
stargazer(m1, m2, type='html', header = FALSE,
title = 'Determinants of MPs Positions in the Debate on Regulating PGD')
stargazer(m1, m2, type='txt', header = FALSE,
title = 'Determinants of MPs Positions in the Debate on Regulating PGD')
stargazer(m1, m2, type='latex', header = FALSE,
title = 'Determinants of MPs Positions in the Debate on Regulating PGD')
?stargazer
stargazer(m1)
stargazer(m1, type='latex', header = FALSE,
title = 'Determinants of MPs Positions in the Debate on Regulating PGD')
m1 <- lm(Position ~ mean_att + Catholic + Prostestant + NoAffiliation + Female + Parent + Female*Parent +
Theology + Medicine, merged.data)
m2 <- lm(Position ~ mean_att + Catholic + Prostestant + NoAffiliation + Female + Parent + Female*Parent +
Theology + Medicine + Greens + CDU + CSU + Left + FDP, merged.data)
m3 <- glm(vote ~ mean_att + Catholic + Prostestant + NoAffiliation + Female + Parent + Female*Parent +
Theology + Medicine + Greens + CDU + CSU + Left + FDP, merged.logit.data,
family = binomial(link = 'logit'))
m4 <- glm(vote ~ mean_att + Catholic + Prostestant + NoAffiliation + Female + Parent + Female*Parent +
Theology + Medicine, merged.logit.data,
family = binomial(link = 'logit'))
c <- ggplot(merged.data, aes(mean_att))
c+geom_area(stat="bin")
c <- ggplot(merged.data, aes(mean_att))
c+geom_histogram(bandwidth=1)
sd(merged.data$mean_att)
summary(merged.data$mean_att)
?sd
sd(merged.data$mean_att, na.rm=FALSE)
sd(merged.data$mean_att, na.rm=TRUE)
latex(summary(merged.data$mean_att))
install.packages("Hmisc")
library(Hmisc)
latex(summary(merged.data$mean_att))
?geom_histogram
ggplot?
?ggplot
?ggplot
getwd()
library(bea.R)
library(acs)
library(magrittr)
library(httr)
library(tidyr)
library(blsAPI)
library(rjson)
setwd("C:/RajuPC/MPP Final Thesis/Statistics")
voteshare_new <- read.table(file = 'full-us-presidential-counties-1960-2016.tsv', sep = '\t', header = TRUE)
voteshare_recent <- voteshare_new[voteshare_new$year >= "1992",] #Choosing years after 1992
voteshare_recent_rep <- voteshare_recent [voteshare_recent$party == "R", ]
names(voteshare_recent_rep)[names(voteshare_recent_rep)=="vote.percent"] <- "rep.percent"
names(voteshare_recent_rep)[names(voteshare_recent_rep)=="vote.count"] <- "rep.count"
names(voteshare_recent_rep)[names(voteshare_recent_rep)=="is.national.winner"] <- "is.rep.nat.winner"
names(voteshare_recent_rep)[names(voteshare_recent_rep)=="national.party.count"] <- "nat.rep.count"
names(voteshare_recent_rep)[names(voteshare_recent_rep)=="national.party.percent"] <- "nat.rep.percent"
voteshare_recent_rep$party <- NULL
voteshare_recent_dem <- voteshare_recent [voteshare_recent$party == "D", ]
names(voteshare_recent_dem)[names(voteshare_recent_dem)=="vote.percent"] <- "dem.percent"
names(voteshare_recent_dem)[names(voteshare_recent_dem)=="vote.count"] <- "dem.count"
names(voteshare_recent_dem)[names(voteshare_recent_dem)=="is.national.winner"] <- "is.dem.nat.winner"
names(voteshare_recent_dem)[names(voteshare_recent_dem)=="national.party.count"] <- "nat.dem.count"
names(voteshare_recent_dem)[names(voteshare_recent_dem)=="national.party.percent"] <- "nat.dem.percent"
voteshare_recent_dem$party <- NULL
election_data <- merge(voteshare_recent_rep, voteshare_recent_dem, all.x = T)
View(election_data)
beaKey <- 'C3812F4D-F498-40F8-9F36-9FF5AF65DBD7'
#BEA Regional Income Data: Population by county
beaPop <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA1' ,
'LineCode' = '2',
'Year' = '1992, 1996, 2000, 2004, 2008, 2012, 2016' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaPop <- beaGet(beaPop)
View(beaPop)
#BEA Regional Income Data: Per Capita Income by county
beaPCI <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA1' ,
'LineCode' = '3',
'Year' = '1992, 1996, 2000, 2004, 2008, 2012, 2015' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaPCI <- beaGet(beaPCI)
View(beaPCI)
#BEA Regional Income Data: Current Transfer receipts of individuals from Governments
beaCurrent_Transfer <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA35' ,
'LineCode' = '1992, 1996, 2000, 2004, 2008, 2012, 2015',
'Year' = 'ALL' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaCurrent_Transfer <- beaGet(beaCurrent_Transfer)
#BEA Regional Income Data: Adjustment for Residence equals the inflows to that county minus the outflows from that county
beaAdjustment_Residence <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA91' ,
'LineCode' = '30',
'Year' = '1992, 1996, 2000, 2004, 2008, 2012, 2015' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaAdjustment_Residence <- beaGet(beaAdjustment_Residence)
#BEA Regional Income Data: Current Transfer receipts of individuals from Governments
beaCurrent_Transfer <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA35' ,
'LineCode' = '1992, 1996, 2000, 2004, 2008, 2012, 2015',
'Year' = 'ALL' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaCurrent_Transfer <- beaGet(beaCurrent_Transfer)
beaCurrent_Transfer <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA35' ,
'LineCode' = 'ALL',
'Year' = 'ALL' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaCurrent_Transfer <- beaGet(beaCurrent_Transfer)
beaKey <- 'C3812F4D-F498-40F8-9F36-9FF5AF65DBD7'
beaCurrent_Transfer <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA35' ,
'LineCode' = 'ALL',
'Year' = '1992, 1996, 2000, 2004, 2008, 2012, 2015' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaCurrent_Transfer <- beaGet(beaCurrent_Transfer)
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(bea.R)
library(acs)
library(magrittr)
library(httr)
library(tidyr)
library(blsAPI)
library(rjson)
setwd("C:/RajuPC/MPP Final Thesis/Statistics")
blskey <- "a9e62413e38741b5aeb814efc5a3d066"
beaKey <- 'C3812F4D-F498-40F8-9F36-9FF5AF65DBD7'
censusKey <- "c7ed765d1b03f4217ccc4b37d31b0dc3580db44e"
datagovkey <- "ubFrNGonfwMQm3lK04C6djaMcqFuIe5mvev4RooI"
getwd()
library(bea.R)
library(acs)
library(magrittr)
library(httr)
library(tidyr)
library(blsAPI)
library(rjson)
setwd("C:/RajuPC/MPP Final Thesis/Statistics")
blskey <- "a9e62413e38741b5aeb814efc5a3d066"
beaKey <- 'C3812F4D-F498-40F8-9F36-9FF5AF65DBD7'
censusKey <- "c7ed765d1b03f4217ccc4b37d31b0dc3580db44e"
datagovkey <- "ubFrNGonfwMQm3lK04C6djaMcqFuIe5mvev4RooI"
getwd()
setwd("C:/RajuPC/MPP Final Thesis/Statistics")
getwd()
rm(list=ls())
getwd()
setwd("C:/RajuPC/MPP Final Thesis/Statistics")
getwd()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(bea.R)
library(acs)
library(magrittr)
library(httr)
library(tidyr)
library(blsAPI)
library(rjson)
setwd("C:/RajuPC/MPP Final Thesis/Statistics")
blskey <- "a9e62413e38741b5aeb814efc5a3d066"
beaKey <- 'C3812F4D-F498-40F8-9F36-9FF5AF65DBD7'
censusKey <- "c7ed765d1b03f4217ccc4b37d31b0dc3580db44e"
datagovkey <- "ubFrNGonfwMQm3lK04C6djaMcqFuIe5mvev4RooI"
unemp92 <- read.table('laucnty92.txt')
unemp92 <- read.table('laucnty92.txt')
install.packages("readxl")
unemp92 <- read.table('laucnty92.txt')
unemp92 <- read_excel('laucnty92.xlsx')
unemp92 <- read_xls('laucnty92.xlsx')
unemp92 <- read_xlsx('laucnty92.xlsx')
library(readxl)
unemp92 <- read_xlsx('laucnty92.xlsx')
install.packages("xlsx")
library(xlsx)
unemp92 <- read_xlsx('laucnty92.xlsx')
library(bea.R)
library(acs)
library(magrittr)
library(httr)
library(tidyr)
library(blsAPI)
library(rjson)
library(readxl)
library(xlsx)
install.packages("rJava")
library(rJava)
library(xlsx)
unemp92 <- read.table('laucnty92.txt', header =FALSE)
unemp92 <- read.table('https://www.bls.gov/lau/laucnty92.txt', header =FALSE)
unemp92 <- read.table('https://www.bls.gov/lau/laucnty92.txt', header =TRUE)
unemp92 <- read.table('https://www.bls.gov/lau/laucnty92.txt', fill=TRUE, header =TRUE)
voteshare_new <- read.table(file = 'full-us-presidential-counties-1960-2016.tsv', sep = '\t', header = TRUE)
voteshare_recent <- voteshare_new[voteshare_new$year >= "1992",] #Choosing years after 1992
voteshare_recent_rep <- voteshare_recent [voteshare_recent$party == "R", ]
names(voteshare_recent_rep)[names(voteshare_recent_rep)=="vote.percent"] <- "rep.percent"
names(voteshare_recent_rep)[names(voteshare_recent_rep)=="vote.count"] <- "rep.count"
names(voteshare_recent_rep)[names(voteshare_recent_rep)=="is.national.winner"] <- "is.rep.nat.winner"
names(voteshare_recent_rep)[names(voteshare_recent_rep)=="national.party.count"] <- "nat.rep.count"
names(voteshare_recent_rep)[names(voteshare_recent_rep)=="national.party.percent"] <- "nat.rep.percent"
voteshare_recent_rep$party <- NULL
voteshare_recent_dem <- voteshare_recent [voteshare_recent$party == "D", ]
names(voteshare_recent_dem)[names(voteshare_recent_dem)=="vote.percent"] <- "dem.percent"
names(voteshare_recent_dem)[names(voteshare_recent_dem)=="vote.count"] <- "dem.count"
names(voteshare_recent_dem)[names(voteshare_recent_dem)=="is.national.winner"] <- "is.dem.nat.winner"
names(voteshare_recent_dem)[names(voteshare_recent_dem)=="national.party.count"] <- "nat.dem.count"
names(voteshare_recent_dem)[names(voteshare_recent_dem)=="national.party.percent"] <- "nat.dem.percent"
voteshare_recent_dem$party <- NULL
election_data <- merge(voteshare_recent_rep, voteshare_recent_dem, all.x = T)
rm(voteshare_new, voteshare_recent_rep, voteshare_recent_dem)
rm(voteshare_new, voteshare_recent, voteshare_recent_rep, voteshare_recent_dem)
#BEA Regional Income Data: Population by county
##2016 Data is not available
beaPop <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA1' ,
'LineCode' = '2',
'Year' = '1992, 1996, 2000, 2004, 2008, 2012' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaPop <- beaGet(beaPop)
#BEA Regional Income Data: Per Capita Income by county
beaPCI <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA1' ,
'LineCode' = '3',
'Year' = '1992, 1996, 2000, 2004, 2008, 2012' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaPCI <- beaGet(beaPCI)
#Make sure NAs don't turn into 0.
#The data is available until 2015 only. Let's see what can be done to match the election data.
#BEA Regional Income Data: Current Transfer receipts of individuals from Governments
##API error, this data is not loading.
beaCurrent_Transfer <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA35' ,
'LineCode' = 'ALL',
'Year' = '1992, 1996, 2000, 2004, 2008, 2012' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaCurrent_Transfer <- beaGet(beaCurrent_Transfer)
#BEA Regional Income Data: Adjustment for Residence equals the inflows to that county minus the outflows from that county
beaAdjustment_Residence <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA91' ,
'LineCode' = '30',
'Year' = '1992, 1996, 2000, 2004, 2008, 2012' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaAdjustment_Residence <- beaGet(beaAdjustment_Residence)
beaPercapita_Current_Transfer <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA30' ,
'LineCode' = '11',
'Year' = '1992, 1996, 2000, 2004, 2008, 2012' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaPercapita_Current_Transfer <- beaGet(beaPercapita_Current_Transfer)
beaPercapita_Current_Transfer <- list(
'UserID' = beaKey ,
'Method' = 'GetData',
'datasetname' = 'RegionalIncome',
'TableName' = 'CA30' ,
'LineCode' = '130',
'Year' = '1992, 1996, 2000, 2004, 2008, 2012' ,
'GeoFips' = 'COUNTY' ,
'ResultFormat' = 'json'
);
beaPercapita_Current_Transfer <- beaGet(beaPercapita_Current_Transfer)
View(beaPercapita_Current_Transfer)
View(beaPop)

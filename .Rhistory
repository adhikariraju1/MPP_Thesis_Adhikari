race <- race %>%
filter(year %% 4 == 0)
filter(race == c("1", "2"))
race <- race %>%
filter(year %% 4 == 0)
filter(race = c("1", "2"))
race$year <- as.numeric(race$year, race$population)
?sum
race$fips <- paste(race$state.fips, race$county.fips, sep="")
View(race)
View(race_al)
View(race)
race <- read.fwf("C:/RajuPC/MPP Final Thesis/MPP_Thesis_Adhikari/al.1990_2014.19ages.adjusted.txt",
widths = c(4,2,2,3,2,1,1,1,2,8), colClasses = "character")
colnames(race) <- c("year", "state", "state.fips", "county.fips", "registry", "race", "origin",
"sex", "age.group", "population")
race$year <- as.numeric(race$year)
race$population <- as.numeric (race$population)
race$fips <- paste(race$state.fips, race$county.fips, sep="")
race <- race %>%
filter(year %% 4 == 0)
View(race)
race$fips <- paste(race$state.fips, race$county.fips, sep="")
View(race)
View(race)
View(race)
race$race <- paste(race$race, race$origin, sep="")
View(race)
race$county.fips <- paste(race$state.fips, race$county.fips, sep="")
View(race)
colnames(race) <- c("year", "state", "state.fips", "county.fips", "registry", "race", "origin",
"sex", "age.group", "population")
race$year <- as.numeric(race$year)
race$population <- as.numeric (race$population)
race$county.fips <- paste(race$state.fips, race$county.fips, sep="")
race <- race %>%
filter(year %% 4 == 0)
race$race <- paste(race$race, race$origin, sep="
View(race)
View(race)
View(race)
race <- read.fwf("C:/RajuPC/MPP Final Thesis/MPP_Thesis_Adhikari/al.1990_2014.19ages.adjusted.txt",
widths = c(4,2,2,3,2,1,1,1,2,8), colClasses = "character")
colnames(race) <- c("year", "state", "state.fips", "county.fips", "registry", "race", "origin",
"sex", "age.group", "population")
race$year <- as.numeric(race$year)
race$population <- as.numeric (race$population)
#To concatenate:
race$county.fips <- paste(race$state.fips, race$county.fips, sep="")
race$race <- paste(race$race, race$origin, sep="")
# 10 is non-hispanic white, 20 is non-hispanic black, 30 is American indian/alaska native, 40 is Asian or Pacific
#islander, 11 is hispanic white and 21 is hispanic black.
#11 and 21 can be combined and be seen as Hispanic and 30 and 40 can be combined into Others.
race <- race %>%
filter(year %% 4 == 0)
race <- read.fwf("C:/RajuPC/MPP Final Thesis/MPP_Thesis_Adhikari/al.1990_2014.19ages.adjusted.txt",
widths = c(4,2,2,3,2,1,1,1,2,8), colClasses = "character")
colnames(race) <- c("year", "state", "state.fips", "county.fips", "registry", "race", "origin",
"sex", "age.group", "population")
race$year <- as.numeric(race$year)
race$population <- as.numeric (race$population)
#To concatenate:
race$county.fips <- paste(race$state.fips, race$county.fips, sep="")
race$race <- paste(race$race, race$origin, sep="")
race <- race %>%
filter(year %% 4 == 0)
View(race)
race <- race %>%
filter(year %% 4 == 0) %>%
filter(age.group != "00", "01", "02", "03", "04")
race$population <- as.numeric(race$population)
race$age.group <- as.numeric(race$age.group)
race <- race %>%
filter(year %% 4 == 0) %>%
filter(age.group >= 5)
View(race)
race <- race[-c("state.fips", "origin")]
race <- race[-c(3,7)]
race$racebysex <- paste(race$race, race$sex, sep="")
race <- race[-c(5,6)]
race <- race[-c(5)]
race <- race[c(1,2,3,6,5)] #Subsetting into the final dataframe with only variables and in proper order.
race <- race %>%
arrange(county.fips, year) %>%
group_by(racebysex) %>%
sum(population)
race$county.fips <- as.numeric(race$county.fips)
race <- race %>%
arrange(county.fips, year) %>%
group_by(racebysex) %>%
sum(population)
race <- race %>%
group_by(county.fips, year, racebysex) %>%
summarize(population = sum(population))
race <- race %>%
group_by(county.fips, state, year, racebysex) %>%
summarize(population = sum(population))
race <- race[c(1,2,3,6,5)] #Subsetting into the final dataframe with only variables and in proper order.
race <- read.fwf("C:/RajuPC/MPP Final Thesis/MPP_Thesis_Adhikari/al.1990_2014.19ages.adjusted.txt",
widths = c(4,2,2,3,2,1,1,1,2,8), colClasses = "character")
colnames(race) <- c("year", "state", "state.fips", "county.fips", "registry", "race", "origin",
"sex", "age.group", "population")
race$year <- as.numeric(race$year)
race$population <- as.numeric(race$population)
race$age.group <- as.numeric(race$age.group)
#To concatenate:
race$county.fips <- paste(race$state.fips, race$county.fips, sep="")
race$county.fips <- as.numeric(race$county.fips)
race$race <- paste(race$race, race$origin, sep="")
# 10 is non-hispanic white, 20 is non-hispanic black, 30 is American indian/alaska native, 40 is Asian or Pacific
#islander, 11 is hispanic white and 21 is hispanic black.
#11 and 21 can be combined and be seen as Hispanic and 30 and 40 can be combined into Others.
race <- race[-c(3,7)] #Removing the columns from before we did the concatenate.
race <- race %>%
filter(year %% 4 == 0) %>%
filter(age.group >= 5)
#To concatenate:
#101 is white male, 201 is black male, 102 is white female, 202 is black female
#create hispanic male, hispanic female, other male, other female (301, 401 combined) (302, 402 combined)
#(111, 211 combined, and 112, 212 combined)
race$racebysex <- paste(race$race, race$sex, sep="")
race <- race[-c(5,6)]
#Now the column age group can be removed since we don't need to group by this category anymore.
race <- race[-c(5)]
race <- race[c(1,2,3,6,5)] #Subsetting into the final dataframe with only variables and in proper order.
race <- race %>%
group_by(county.fips, state, year, racebysex) %>%
summarize(population = sum(population))
View(race)
race <- spread(race, racebysex, population)
setnames(race, old =c("county.fips", "state", "year", "101", "102", "111", "112", "201",
"202", "211", "212", "301", "302", "311", "312", "401", "402", "411", "412"),
new = c("county.fips", "state", "year", "whitemale", "whitefemale", "white.his.male", "white.his.female", "blackmale",
"blackfemale", "black.his.male", "black.his.female", "indmale", "indfemale", "ind.his.male", "ind.his.female",
"asianmale", "asianfemale", "asian.his.male", "asian.his.female"))
race <- setnames(race, old =c("county.fips", "state", "year", "101", "102", "111", "112", "201",
"202", "211", "212", "301", "302", "311", "312", "401", "402", "411", "412"),
new = c("county.fips", "state", "year", "whitemale", "whitefemale", "white.his.male", "white.his.female", "blackmale",
"blackfemale", "black.his.male", "black.his.female", "indmale", "indfemale", "ind.his.male", "ind.his.female",
"asianmale", "asianfemale", "asian.his.male", "asian.his.female"))
library(data.table)
setnames(race, old =c("county.fips", "state", "year", "101", "102", "111", "112", "201",
"202", "211", "212", "301", "302", "311", "312", "401", "402", "411", "412"),
new = c("county.fips", "state", "year", "whitemale", "whitefemale", "white.his.male", "white.his.female", "blackmale",
"blackfemale", "black.his.male", "black.his.female", "indmale", "indfemale", "ind.his.male", "ind.his.female",
"asianmale", "asianfemale", "asian.his.male", "asian.his.female"))
?rename
View(race)
race <- race %>%
summarize(other.male = sum(white.his.male, black.his.male, indmale, ind.his.male, asianmale, asian.his.male))
race <- race %>%
ungroup()
summarize(other.male = sum(white.his.male, black.his.male, indmale, ind.his.male, asianmale, asian.his.male))
race <- spread(race, racebysex, population)
setnames(race, old =c("county.fips", "state", "year", "101", "102", "111", "112", "201",
"202", "211", "212", "301", "302", "311", "312", "401", "402", "411", "412"),
new = c("county.fips", "state", "year", "whitemale", "whitefemale", "white.his.male", "white.his.female", "blackmale",
"blackfemale", "black.his.male", "black.his.female", "indmale", "indfemale", "ind.his.male", "ind.his.female",
"asianmale", "asianfemale", "asian.his.male", "asian.his.female"))
race <- race %>%
group_by(county.fips, state, year, racebysex) %>%
summarize(population = sum(population))
race <- read.fwf("C:/RajuPC/MPP Final Thesis/MPP_Thesis_Adhikari/al.1990_2014.19ages.adjusted.txt",
widths = c(4,2,2,3,2,1,1,1,2,
race <- read.fwf("C:/RajuPC/MPP Final Thesis/MPP_Thesis_Adhikari/al.1990_2014.19ages.adjusted.txt",
widths = c(4,2,2,3,2,1,1,1,2,8), colClasses = "character")
library(dplyr)
library(tidyr)
library(data.table)
library(dplyr)
library(tidyr)
library(data.table)
race <- read.fwf("C:/RajuPC/MPP Final Thesis/MPP_Thesis_Adhikari/al.1990_2014.19ages.adjusted.txt",
widths = c(4,2,2,3,2,1,1,1,2,8), colClasses = "character")
colnames(race) <- c("year", "state", "state.fips", "county.fips", "registry", "race", "origin",
"sex", "age.group", "population")
race$year <- as.numeric(race$year)
race$population <- as.numeric(race$population)
race$age.group <- as.numeric(race$age.group)
#To concatenate:
race$county.fips <- paste(race$state.fips, race$county.fips, sep="")
race$county.fips <- as.numeric(race$county.fips)
race$race <- paste(race$race, race$origin, sep="")
# 10 is non-hispanic white, 20 is non-hispanic black, 30 is American indian/alaska native, 40 is Asian or Pacific
#islander, 11 is hispanic white and 21 is hispanic black.
#11 and 21 can be combined and be seen as Hispanic and 30 and 40 can be combined into Others.
race <- race[-c(3,7)] #Removing the columns from before we did the concatenate.
race <- race %>%
filter(year %% 4 == 0) %>%
filter(age.group >= 5)
#To concatenate:
#101 is white male, 201 is black male, 102 is white female, 202 is black female
#create hispanic male, hispanic female, other male, other female (301, 401 combined) (302, 402 combined)
#(111, 211 combined, and 112, 212 combined)
race$racebysex <- paste(race$race, race$sex, sep="")
race <- race[-c(5,6)]
#Now the column age group can be removed since we don't need to group by this category anymore.
race <- race[-c(5)]
race <- race[c(1,2,3,6,5)] #Subsetting into the final dataframe with only variables and in proper order.
race <- race %>%
group_by(county.fips, state, year, racebysex) %>%
summarize(population = sum(population))
race <- spread(race, racebysex, population)
setnames(race, old =c("county.fips", "state", "year", "101", "102", "111", "112", "201",
"202", "211", "212", "301", "302", "311", "312", "401", "402", "411", "412"),
new = c("county.fips", "state", "year", "whitemale", "whitefemale", "white.his.male", "white.his.female", "blackmale",
"blackfemale", "black.his.male", "black.his.female", "indmale", "indfemale", "ind.his.male", "ind.his.female",
"asianmale", "asianfemale", "asian.his.male", "asian.his.female"))
View(race)
race$other.male <- race$white.his.male + race$black.his.male + indmale + ind.his.male + asianmale + asian.his.male
race$other.male <- race$white.his.male + race$black.his.male +
race$indmale + race$ind.his.male + race$asianmale + race$asian.his.male
race$other.female <- race$white.his.female + race$black.his.female +
race$indfemale + race$ind.his.female + race$asianfemale + race$asian.his.female
race$other.female <- race$white.his.female + race$black.his.female +
race$indfemale + race$ind.his.female + race$asianfemale + race$asian.his.female
race <- race[c(1:5,8,9,20,21)]
library(xlsx)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(data.table)
library(xlsx)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(data.table)
library(xlsx)
getwd()
setwd("C:\Users\adhik\Desktop\DataFest 2017")
setwd("C:/Users/adhik/Desktop/DataFest 2017")
?fread
data <- fread("C:/Users/adhik/Desktop/DataFest 2017/Datasets/data.txt")
dest <- fread("C:/Users/adhik/Desktop/DataFest 2017/Datasets/dest.txt")
View(data)
View(dest)
View(data)
unique(data$user_location_city)
View(data)
data_us <- data %>%
filter(user_location_country=="UNITED STATES OF AMERICA")
View(data_us)
unique(data_us$user_location_city)
names(dest)
?sample
?subset
sampledata <- subset(data)
sampledata <- sample_n(data, size = 5000)
View(sampledata)
sampledata = sampledata[,c("date", "time")] := tstrsplit(date_time, split=" ")
DT = as.data.table(sampledata)
DT = DT[,c("date", "time")] := tstrsplit(date_time, split=" ")]
DT = DT[,c("date", "time")] := tstrsplit(date_time, split=" ")
DTs = DT[,c("date", "time")] := tstrsplit(date_time, split=" ")
DTs = DT[,c("date", "time") := tstrsplit(date_time, split=" ")]
View(DTs)
DT = DT[, c("year","month","day"):= tstrsplit(date, split="-")]
rm(DTs)
View(DT)
drop(DT[,date_time])
range(DT$year)
is.numeric(DT$year)
as.numeric(DT$year)
range(DT$year)
unique(DT$year)
rm(sampledata)
DT[,-"date_time"]
View(DT)
DT <- DT[,-1]
DT[, date:=NULL]
DT <- DT[,-27]
names(Data)
names(data)
unique(data$srch_destination_id)
unique(data$srch_destination_id) %>% nrow()
unique(data$srch_destination_id) %>% length()
left_join(data, dest)
left_join(fread("data.txt", stringsAsFactors = F), fread("dest.txt", stringsAsFactors = F))
left_join(fread("C:/Users/adhik/Desktop/DataFest 2017/Datasets/data.txt", stringsAsFactors = F), fread("C:/Users/adhik/Desktop/DataFest 2017/Datasets/dest.txt", stringsAsFactors = F))
data <- fread("C:/Users/adhik/Desktop/DataFest 2017/Datasets/data.txt")
left_join(fread("C:/Users/adhik/Desktop/DataFest 2017/Datasets/data.txt", stringsAsFactors = F), fread("C:/Users/adhik/Desktop/DataFest 2017/Datasets/dest.txt", stringsAsFactors = F))
help("memory.size")
data <- fread("C:/Users/adhik/Desktop/DataFest 2017/Datasets/data.txt")
setwd("C:/Users/adhik/Desktop/DataFest 2017")
data <- fread("C:/Users/adhik/Desktop/DataFest 2017/Datasets/data.txt")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(data.table)
library(xlsx)
setwd("C:/Users/adhik/Desktop/DataFest 2017")
data <- fread("C:/Users/adhik/Desktop/DataFest 2017/Datasets/data.txt")
dest <- fread("C:/Users/adhik/Desktop/DataFest 2017/Datasets/dest.txt")
View(data)
Count(data$user_id)
length(data[,user_location_country="CANADA"])
count(data$user_location_id)
dim(data$user_location_id)
View(dest)
frequency(dest$srch_destination_type_id)
head(subset(dest, select = 'srch_destination_type_id'))
table(data$srch_destination_id)
table(data$srch_destination_id) %>% sort()
?by
?sort
t <- table(data$srch_destination_id)
barplot(t)
?table
by(t)
by.default(t)
which(t==max(t))
dest$srch_destination_name[dest$srch_destination_id==5526679]
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/RajuPC/Content Analysis/Assignment2")
library(manifestoR)
library(knitr)
library(fBasics)
library(dplyr)
mp_setapikey("manifesto_apikey.txt")
table1 <- mp_coreversions()
kable(table1, align="c", caption="All the Manifesto versions available")
df1 <- mp_maindataset(version = "current", south_america = FALSE, download_format = NULL, apikey = NULL, cache = TRUE)
df2 <- df1 %>% filter(countryname == "Germany")
df2 <- df1 %<% filter(countryname == "Germany")
df1 <- df1 %>% filter(countryname == "Germany")
df1 <- df1 %>%
filter(countryname == "Germany")
df1 <- df1 %>%
filter(countryname == "Germany")
View(df1)
df2 <- df1 %>%
filter(countryname == "Germany")
df2 <- df1 %>%
filter(countryname == "Germany")
df2 <- filter(df1$countryname == "Germany")
library("dplyr", lib.loc="~/R/win-library/3.3")
df2 <- filter(df1$countryname == "Germany")
df2 <- filter(df1$countryname == "Germany")
df2 <- df1 %>%
filter_(countryname="Germany")
df2 <- df1 %>%
filter_(countryname=="Germany")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/RajuPC/Content Analysis/Assignment2")
library(manifestoR)
library(knitr)
library(fBasics)
library(dplyr)
mp_setapikey("manifesto_apikey.txt")
table1 <- mp_coreversions()
kable(table1, align="c", caption="All the Manifesto versions available")
df1 <- mp_maindataset(version = "current", south_america = FALSE, download_format = NULL, apikey = NULL, cache = TRUE)
table2 <- unique(df2$partyname)
df2 <- df1 %>%
filter(countryname = "Germany")
df1 <- mp_maindataset(version = "current", south_america = FALSE, download_format = NULL, apikey = NULL)
df2 <- df1 %>%
filter(countryname = "Germany")
unique(df1$countryname)
df3 <- df1 %>%
select(rile, planeco, markeco, welfare, intpeace)
df2 <- df1 %>%
filter(countryname == "Germany")
df2 <- df1 %>%
filter(countryname == "Germany")
df2 <- df1 %>%
filter(countryname == "Germany")
library(dplyr)
df2 <- df1 %>%
filter(countryname == "Germany")
View(df1)
names(df1)
df2 <- df1 %>%
filter(country = 41)
df2 <- df1 %>%
filter(country == 41)
df4 <- df1 %>%
filter(country == 41)
df2 <- df1 %>%
filter(country == 41)
df2 <- df1
df4 <- df2 %>%
filter(country == 41)
df4 <- df2 %>%
filter(df2, country == 41)
df2 <- df1 %>%
ungroup()
filter(country == 41)
df1 <- ungroup(df1)
df2 <- df1 %>%
filter(country == 41)
View(df2)
df3 <- df1 %>%
select(rile, planeco, markeco, welfare, intpeace)
table3 <- basicStats(df3)
kable(table3, align="c", caption="Summary of Descriptive Statistics", digits = 2)
df1 <- df1 %>%
ungroup() %>%
filter(countryname == "Germany")
df2 <- df1 %>%
dplyr::filter(countryname == "Germany")
table2 <- unique(df2$partyname)
kable(table2, align="c", caption="All the parties in Germany(1949-2013)", col.names ="Party Name")
df3 <- df2 %>%
select(rile, planeco, markeco, welfare, intpeace)
table3 <- basicStats(df3)
kable(table3, align="c", caption="Summary of Descriptive Statistics", digits = 2)
install.packages(c("BH", "car", "colorspace", "countrycode", "curl", "data.table", "DBI", "digest", "ggplot2", "googleVis", "jsonlite", "koRpus", "lmtest", "openssl", "openxlsx", "pbkrtest", "plm", "psych", "qdapRegex", "Rcpp", "RcppEigen", "readr", "rmarkdown", "selectr", "shiny", "sourcetools", "SparseM", "stringi", "stringr", "survival", "swirl", "tibble", "viridis", "viridisLite", "XML", "xml2", "yaml", "zoo"))
#**********************************************************************************************
#Processing
#**********************************************************************************************
#Loading all the necessary packages
packages <- c("bea.R", "acs", "magrittr", "httr", "tidyr", "blsAPI", "rjson", "readxl", "dplyr", "jsonlite",
"stringr", "rJava", "xlsx", "qdap", "data.table", "plm", "rio", "Zelig", "stargazer")
load <- lapply(packages, require, character.only = T)
#Setting the working directory
setwd("C:/RajuPC/MPP Final Thesis/WorkingDirectory")
#All the keys for different APIs obtained from the respective websites
blskey <- "a9e62413e38741b5aeb814efc5a3d066"
beaKey <- 'C3812F4D-F498-40F8-9F36-9FF5AF65DBD7'
censusKey <- "c7ed765d1b03f4217ccc4b37d31b0dc3580db44e"
datagovkey <- "ubFrNGonfwMQm3lK04C6djaMcqFuIe5mvev4RooI"
source("Statistics.R")
p1_m1_ols <- lm(rep.share ~ unemp_gro + PCI_gro + repshare.lag, merged_df4)
p1_m1_fe <- plm(rep.share ~ unemp_gro + PCI_gro + repshare.lag, merged_df4, model = 'within')
p1_m1_re <- plm(rep.share ~ unemp_gro + PCI_gro + repshare.lag, merged_df4, model = 'random')
phtest(p1_m1_fe, p1_m1_re)
stargazer::stargazer(p1_m1_ols, p1_m1_fe, p1_m1_re, type = 'text', digits = 2, header = FALSE,
title = 'Base Model (OLS, FE, RE)', font.size = 'normalsize')
stargazer::stargazer(p1_m1_ols, p1_m1_fe, p1_m1_re, type = 'text.txt', digits = 2, header = FALSE,
title = 'Base Model (OLS, FE, RE)', font.size = 'normalsize')
stargazer::stargazer(p1_m1_ols, p1_m1_fe, p1_m1_re, type = 'text', digits = 2, header = FALSE,
title = 'Base Model (OLS, FE, RE)', font.size = 'normalsize')
#Introducing interactions (FE)
p1_m3_fe <- plm(rep.share ~ unemp_gro + PCI_gro + repshare.lag + Pop + white.percent + as.factor(rep_incumb)
+ unemp_gro:as.factor(rep_incumb) + PCI_gro:as.factor(rep_incumb) + as.factor(rural)
+ white.percent:as.factor(rural), merged_df4, model = 'within')
stargazer::stargazer(p1_m3_fe, type = 'text', digits = 2, header = FALSE,
title = 'Model with Controls and Interactions (FE)', font.size = 'normalsize')
stargazer::stargazer(p1_m3_fe, type = 'text', digits = 2, header = FALSE,
title = 'Model with Controls and Interactions (FE)', font.size = 'normalsize', out = 'p1m3fe.htm')
stargazer::stargazer(p1_m1_ols, p1_m1_fe, p1_m1_re, type = 'text', digits = 2, header = FALSE,
title = 'Base Model (OLS, FE, RE)', font.size = 'normalsize', out = 'p1m1all.htm')
stargazer::stargazer(phtest, out ='hausman.htm')
hausman <- phtest(p1_m1_fe, p1_m1_re) #Hausman test to choose between FE and RE shows that FE is better since p-value < 0.05
stargazer::stargazer(hausman, out ='hausman.htm')
stargazer::stargazer(hausman, type='text', out ='hausman.htm')
phtest(p1_m1_fe, p1_m1_re) #Hausman test to choose between FE and RE shows that FE is better since p-value < 0.05
source("Statistics_Part2.R")
View(p2_merged_df4)
p2_m1_ols <- lm(rep.share.gro ~ unemp_gro + pci_gro, logit.data)
p2_m1_logit <- glm(flip ~ unemp_gro + pci_gro, logit.data, family = binomial(link = "logit"))
stargazer::stargazer(p2_m1_ols, p2_m1_logit, type = 'text', digits = 2, header = FALSE,
title = 'Base Model(OLS and Logit)', font.size = 'normalsize', out = 'p2m1all.htm')
p2_m2_ols <- lm(rep.share.gro ~ unemp_gro + pci_gro + pop + educ + white.percent +
rural, logit.data)
p2_m2_logit <- glm(flip ~ unemp_gro + pci_gro + pop + educ + white.percent +
rural, logit.data, family = binomial(link = "logit"))
stargazer::stargazer(p2_m2_logit, type = 'text', digits = 2, header = FALSE,
title = 'With Controls Model (OLS and Logit)', font.size = 'normalsize', out = 'p2m2all.htm')
p2_m2_ols <- lm(rep.share.gro ~ unemp_gro + pci_gro + pop + educ + white.percent +
rural, logit.data)
p2_m2_logit <- glm(flip ~ unemp_gro + pci_gro + pop + educ + white.percent +
rural, logit.data, family = binomial(link = "logit"))
stargazer::stargazer(p2_m2_ols, p2_m2_logit, type = 'text', digits = 2, header = FALSE,
title = 'With Controls Model (OLS and Logit)', font.size = 'normalsize', out = 'p2m2all.htm')
p2_m2_ols <- lm(rep.share.gro ~ unemp_gro + pci_gro + pop + educ + white.percent +
rural, logit.data)
p2_m2_logit <- glm(flip ~ unemp_gro + pci_gro + pop + educ + white.percent +
rural, logit.data, family = binomial(link = "logit"))
p2_m3_logit <- glm(flip ~ unemp_gro + pci_gro + pop + educ + white.percent + educ:white.percent +
white.percent:rural + rural, logit.data, family = binomial(link = "logit"))
stargazer::stargazer(p2_m2_ols, p2_m2_logit, p2_m3_logit, type = 'text', digits = 2, header = FALSE,
title = 'With Controls Model (OLS and Logit)', font.size = 'normalsize', out = 'p2m3all.htm')
p2_m2_ols <- lm(rep.share.gro ~ unemp_gro + pci_gro + pop + educ + white.percent +
as.factor(rural), logit.data)
p2_m2_logit <- glm(flip ~ unemp_gro + pci_gro + pop + educ + white.percent +
as.factor(rural), logit.data, family = binomial(link = "logit"))
p2_m3_logit <- glm(flip ~ unemp_gro + pci_gro + pop + educ + white.percent + educ:white.percent +
white.percent:as.factor(rural) + as.factor(rural), logit.data, family = binomial(link = "logit"))
stargazer::stargazer(p2_m2_ols, p2_m2_logit, p2_m3_logit, type = 'text', digits = 2, header = FALSE,
title = 'With Controls Model (OLS and Logit)', font.size = 'normalsize', out = 'p2m3all.htm')
#Adding Controls (OLS and Logit)
p2_m2_ols <- lm(rep.share.gro ~ unemp_gro + pci_gro + pop + educ + white.percent +
as.factor(rural), logit.data)
p2_m2_logit <- glm(flip ~ unemp_gro + pci_gro + pop + educ + white.percent +
as.factor(rural), logit.data, family = binomial(link = "logit"))
p2_m3_logit <- glm(flip ~ unemp_gro + pci_gro + pop + educ + white.percent + educ:white.percent +
+ as.factor(rural), logit.data, family = binomial(link = "logit"))
stargazer::stargazer(p2_m2_ols, p2_m2_logit, p2_m3_logit, type = 'text', digits = 2, header = FALSE,
title = 'With Controls Model (OLS and Logit)', font.size = 'normalsize', out = 'p2m3all.htm')
p2_m3_ols <- lm(rep.share.gro ~ unemp_gro + pci_gro + pop + educ + white.percent + educ:white.percent +
+ as.factor(rural) + as.factor(rural):white.percent, logit.data)
p2_m3_logit <- glm(flip ~ unemp_gro + pci_gro + pop + educ + white.percent + educ:white.percent +
+ as.factor(rural) + as.factor(rural):white.percent, logit.data, family = binomial(link = "logit"))
stargazer::stargazer(p2_m3_ols, p2_m3_logit, type = 'text', digits = 2, header = FALSE,
title = 'With Controls and Interactions Model (OLS and Logit)', font.size = 'normalsize', out = 'p2m3all.htm')
p2_m3_ols <- lm(rep.share.gro ~ unemp_gro + pci_gro + pop + educ + white.percent + educ:white.percent +
+ as.factor(rural), logit.data)
p2_m3_logit <- glm(flip ~ unemp_gro + pci_gro + pop + educ + white.percent + educ:white.percent +
+ as.factor(rural), logit.data, family = binomial(link = "logit"))
stargazer::stargazer(p2_m3_ols, p2_m3_logit, type = 'text', digits = 2, header = FALSE,
title = 'With Controls and Interactions Model (OLS and Logit)', font.size = 'normalsize', out = 'p2m3all.htm')
p2_m3_ols <- lm(rep.share.gro ~ unemp_gro + pci_gro + pop + educ + white.percent + as.factor(rural):white.percent +
+ as.factor(rural), logit.data)
p2_m3_logit <- glm(flip ~ unemp_gro + pci_gro + pop + educ + white.percent + as.factor(rural):white.percent +
+ as.factor(rural), logit.data, family = binomial(link = "logit"))
stargazer::stargazer(p2_m3_ols, p2_m3_logit, type = 'text', digits = 2, header = FALSE,
title = 'With Controls and Interactions Model (OLS and Logit)', font.size = 'normalsize', out = 'p2m3all.htm')
source("heat-map.R")
p2_merged_df4 %>% filter(state != "HI") %>% county.heatmap("rep.share") +
scale_fill_gradient2(low = "#085BB2", high = "#FF2312", mid = "#4DAFFF", midpoint = 0.40)
